<!--
    This UserControl defines the view for managing "Image Rolls".
    Image Rolls are collections of images used for barcode verification testing.
    The view is split into two main sections:
    1. User Image Rolls: Editable collections of images created by the user.
    2. Fixed Image Rolls: Read-only, pre-defined collections of images.
    
    The UI uses MahApps.Metro and MaterialDesignInXAML for styling and controls.
-->
<UserControl
    x:Class="LabelVal.ImageRolls.Views.ImageRollsManager"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:barCommon="clr-namespace:BarcodeVerification.lib.Common;assembly=BarcodeVerification.lib"
    xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:converters="clr-namespace:LabelVal.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:imageRollEnums="clr-namespace:LabelVal.ImageRolls.ViewModels"
    xmlns:local="clr-namespace:LabelVal.ImageRolls.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:viewModels="clr-namespace:LabelVal.ImageRolls.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewModels:ImageRollsManager,
                                     IsDesignTimeCreatable=False}"
    dialog:DialogParticipation.Register="{Binding}"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\..\Templates\SharedButtonStyles.xaml" />
                <ResourceDictionary Source="Templates/ImageRollTabHeaderTemplate.xaml" />
                <ResourceDictionary Source="Templates/ImageRollListItemTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  Converter to generate content for tab items.  -->
            <converters:ContentGeneratorConverter x:Key="ContentGeneratorConverter" />

            <!--  DataTemplate for the content of a Fixed Image Roll tab. It contains a ListView.  -->
            <DataTemplate x:Key="FixedImageRollsListViewTemplate">

                <ListView
                    Margin="3,3,0,0"
                    ItemTemplate="{StaticResource ImageRollListItemTemplate}"
                    ItemsSource="{Binding Items}"
                    Loaded="ListView_Loaded"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SelectedItem="{Binding DataContext.SelectedFixedImageRoll, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    SelectionChanged="ListViewFixed_SelectionChanged"
                    Style="{StaticResource MahApps.Styles.ListView}"
                    VirtualizingPanel.IsVirtualizing="False"
                    VirtualizingPanel.IsVirtualizingWhenGrouping="False"
                    VirtualizingPanel.VirtualizationMode="Recycling">

                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MahApps.Styles.ListViewItem}" TargetType="ListViewItem" />
                    </ListView.ItemContainerStyle>

                </ListView>
            </DataTemplate>

            <!--  DataTemplate for the content of a User Image Roll tab. It contains a ListView.  -->
            <DataTemplate x:Key="UserImageRollsListViewTemplate">

                <ListView
                    Margin="3,3,0,0"
                    md:ScrollViewerAssist.IsAutoHideEnabled="True"
                    ItemTemplate="{StaticResource ImageRollListItemTemplate}"
                    ItemsSource="{Binding Items}"
                    Loaded="ListViewUser_Loaded"
                    SelectedItem="{Binding DataContext.SelectedUserImageRoll, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    SelectionChanged="ListViewUser_SelectionChanged"
                    Style="{StaticResource MahApps.Styles.ListView}"
                    VirtualizingPanel.IsVirtualizing="False"
                    VirtualizingPanel.IsVirtualizingWhenGrouping="False"
                    VirtualizingPanel.VirtualizationMode="Recycling">

                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MahApps.Styles.ListViewItem}" TargetType="ListViewItem" />
                    </ListView.ItemContainerStyle>

                </ListView>
            </DataTemplate>

            <!--  Style for the Fixed Image Roll TabItems.  -->
            <Style
                x:Key="FixedImageRollTabItemStyle"
                BasedOn="{StaticResource MahApps.Styles.TabItem}"
                TargetType="TabItem">

                <!--  This generates the content (the ListView) for the tab item when it's selected.  -->
                <Setter Property="Content" Value="{Binding Converter={StaticResource ContentGeneratorConverter}, ConverterParameter={StaticResource FixedImageRollsListViewTemplate}}" />

                <Setter Property="Background" Value="{DynamicResource MahApps.HamburgerMenu.Pane.Background}" />
                <Setter Property="BorderThickness" Value="1,1,1,0" />
                <Setter Property="Margin" Value="0" />

                <!--  Sets tooltips for the tab headers based on the group name.  -->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:ApplicationStandards.GS1}">
                        <Setter Property="ToolTip" Value="GS1" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:GradingStandards.ISO_IEC_15416}">
                        <Setter Property="ToolTip" Value="ISO/IEC 15416" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:GradingStandards.ISO_IEC_15415}">
                        <Setter Property="ToolTip" Value="ISO/IEC 15415" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:GradingStandards.None}">
                        <Setter Property="ToolTip" Value="None" />
                    </DataTrigger>
                </Style.Triggers>

            </Style>

            <!--  Style for the User Image Roll TabItems.  -->
            <Style
                x:Key="UserImageRollTabItemStyle"
                BasedOn="{StaticResource MahApps.Styles.TabItem}"
                TargetType="TabItem">

                <!--  This generates the content (the ListView) for the tab item when it's selected.  -->
                <Setter Property="Content" Value="{Binding Converter={StaticResource ContentGeneratorConverter}, ConverterParameter={StaticResource UserImageRollsListViewTemplate}}" />

                <Setter Property="Background" Value="{DynamicResource MahApps.HamburgerMenu.Pane.Background}" />
                <Setter Property="BorderThickness" Value="1,1,1,0" />
                <Setter Property="Margin" Value="0" />

                <!--  Sets tooltips for the tab headers based on the group name.  -->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:ApplicationStandards.GS1}">
                        <Setter Property="ToolTip" Value="GS1" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:GradingStandards.ISO_IEC_15416}">
                        <Setter Property="ToolTip" Value="ISO/IEC 15416" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:GradingStandards.ISO_IEC_15415}">
                        <Setter Property="ToolTip" Value="ISO/IEC 15415" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="{x:Static barCommon:GradingStandards.None}">
                        <Setter Property="ToolTip" Value="None" />
                    </DataTrigger>
                </Style.Triggers>

            </Style>

            <!--  CollectionViewSource for Fixed Image Rolls. This provides sorting and grouping for the read-only image rolls.  -->
            <CollectionViewSource x:Key="FixedImageRolls" Source="{Binding FixedImageRolls}">
                <CollectionViewSource.SortDescriptions>
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="SelectedApplicationStandard" />
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="GS1TableNumber" />
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>

                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="SelectedApplicationStandard" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>

            <!--  CollectionViewSource for User Image Rolls. This provides sorting and grouping for the user-created image rolls.  -->
            <CollectionViewSource x:Key="UserImageRolls" Source="{Binding UserImageRolls}">
                <CollectionViewSource.SortDescriptions>
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="SelectedApplicationStandard" />
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="SelectedGradingStandard" />
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="GS1TableNumber" />
                    <componentmodel:SortDescription Direction="Ascending" PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>

                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="StandardGroup" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--  Main layout grid, dividing the view into User and Fixed Image Roll sections.  -->
    <Grid Margin="3,3,0,0" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  =====================================================================================  -->
        <!--  User Image Rolls Section  -->
        <!--  This section allows users to create, edit, and manage their own image rolls.  -->
        <!--  =====================================================================================  -->
        <DockPanel>

            <!--  Card containing the header and action buttons for User Image Rolls.  -->
            <md:Card
                Margin="3,3,0,0"
                Background="{DynamicResource MahApps.HamburgerMenu.Pane.Background}"
                DockPanel.Dock="Top"
                Foreground="{DynamicResource MahApps.HamburgerMenu.Pane.Foreground}">

                <DockPanel>

                    <Grid Width="47">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <DockPanel Grid.Row="0" Background="{DynamicResource ImageRoll_Brush_Active50}">
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Padding="3"
                                HorizontalAlignment="Center"
                                Kind="FilmstripBoxMultiple" />
                        </DockPanel>

                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Button
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                BorderThickness="0"
                                Click="btnOpenImageRollsLocation"
                                Style="{StaticResource MahApps.Styles.DropDownButton.Button.WindowCommands}"
                                ToolTip="Open the image roll database location.">
                                <iconPacks:Modern
                                    Width="22"
                                    Height="22"
                                    Kind="FolderOpen" />
                            </Button>

                            <!--  Dropdown for managing database sources.  -->
                            <mah:DropDownButton
                                Grid.Row="1"
                                BorderThickness="0"
                                ButtonStyle="{StaticResource MahApps.Styles.DropDownButton.Button.WindowCommands}"
                                ItemsSource="{Binding FileRoot.Children}"
                                ToolTip="Control which databases are loaded or ignored.">
                                <mah:DropDownButton.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        <DockPanel>
                                            <CheckBox IsChecked="{Binding IsSelected}" />
                                            <TextBlock Text="{Binding Name}" />
                                        </DockPanel>
                                    </HierarchicalDataTemplate>
                                </mah:DropDownButton.ItemTemplate>

                                <mah:DropDownButton.Icon>
                                    <iconPacks:PackIconMaterial Kind="Database" />
                                </mah:DropDownButton.Icon>
                            </mah:DropDownButton>
                        </Grid>


                    </Grid>

                    <DockPanel
                        Height="32"
                        HorizontalAlignment="Stretch"
                        DockPanel.Dock="Top">
                        <DockPanel.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="{DynamicResource ImageRoll_Color_Active50}" />
                                <GradientStop Offset="1" Color="{DynamicResource MahApps.Colors.HamburgerMenu}" />
                            </LinearGradientBrush>
                        </DockPanel.Background>

                        <TextBlock
                            Margin="6,0,6,3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Top"
                            Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"
                            Text="Image Rolls" />

                    </DockPanel>

                    <!--  Toolbar with action buttons (Add, Edit, Save, etc.).  -->
                    <ToolBarTray>

                        <ToolBar Padding="0,3" ToolBarTray.IsLocked="True">

                            <!--  Add Button: Visible when not in edit/add mode.  -->
                            <Button Command="{Binding AddCommand}" ToolTip="Add a new Image Roll to the current database.">

                                <Button.Style>
                                    <Style BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <DockPanel>
                                    <TextBlock
                                        Margin="0,0,0,3"
                                        HorizontalAlignment="Center"
                                        DockPanel.Dock="Top"
                                        Text="New"
                                        Visibility="{Binding AppSettings.ShowButtonText, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <iconPacks:PackIconMaterial
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="Plus" />
                                </DockPanel>
                            </Button>

                            <!--  Edit Button: Visible when an item is selected and not in add/edit mode.  -->
                            <Button Command="{Binding EditCommand}" ToolTip="Edit the selected Image Roll.">

                                <Button.Style>
                                    <Style BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedUserImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding NewImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <DockPanel>
                                    <TextBlock
                                        Margin="0,0,0,3"
                                        HorizontalAlignment="Center"
                                        DockPanel.Dock="Top"
                                        Text="Edit"
                                        Visibility="{Binding AppSettings.ShowButtonText, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <iconPacks:PackIconMaterial
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="SquareEditOutline" />
                                </DockPanel>

                            </Button>

                            <!--  Save Button: Visible when in add/edit mode.  -->
                            <Button Command="{Binding SaveCommand}" ToolTip="Save Image Roll">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding NewImageRoll.HasErrors}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <DockPanel>
                                    <TextBlock
                                        Margin="0,0,0,3"
                                        HorizontalAlignment="Center"
                                        DockPanel.Dock="Top"
                                        Text="Save"
                                        Visibility="{Binding AppSettings.ShowButtonText, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <iconPacks:PackIconMaterial
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="ContentSave" />
                                </DockPanel>
                            </Button>

                            <!--  Cancel Button: Visible when in add/edit mode.  -->
                            <Button Command="{Binding CancelCommand}" ToolTip="Cancel">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <DockPanel>
                                    <TextBlock
                                        Margin="0,0,0,3"
                                        HorizontalAlignment="Center"
                                        DockPanel.Dock="Top"
                                        Text="Cancel"
                                        Visibility="{Binding AppSettings.ShowButtonText, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <iconPacks:PackIconMaterial
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="Cancel" />
                                </DockPanel>
                            </Button>

                            <!--  Delete Button: Visible when in add/edit mode.  -->
                            <Button Command="{Binding DeleteCommand}" ToolTip="Delete">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding NewImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="False" />
                                                    <Condition Binding="{Binding NewImageRoll.IsSaved}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <DockPanel>
                                    <TextBlock
                                        Margin="0,0,0,3"
                                        HorizontalAlignment="Center"
                                        DockPanel.Dock="Top"
                                        Text="Delete"
                                        Visibility="{Binding AppSettings.ShowButtonText, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <iconPacks:PackIconMaterial
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="Delete" />
                                </DockPanel>
                            </Button>


                        </ToolBar>

                    </ToolBarTray>


                    <!--  Toggle button to switch text alignment for long names in the list.  -->
                    <DockPanel
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="{DynamicResource MaterialDesign.Brush.ToolBar.Background}">
                        <StackPanel
                            Margin="0,0,6,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                            <TextBlock
                                Margin="0,0,0,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                DockPanel.Dock="Top"
                                FontSize="10"
                                FontWeight="DemiBold"
                                Foreground="{DynamicResource MahApps.Brushes.Text}"
                                Text="Text Align"
                                Visibility="{Binding AppSettings.ShowButtonText, Converter={StaticResource BooleanToVisibilityConverter}}" />

                            <ToggleButton
                                HorizontalAlignment="Center"
                                md:ToggleButtonAssist.OnContent="{iconPacks:Modern Kind=AlignRight}"
                                Content="{iconPacks:Modern Kind=AlignLeft}"
                                IsChecked="{Binding RightAlignOverflow}"
                                ToolTip="Toggle name aligned left or right.">
                                <ToggleButton.LayoutTransform>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                </ToggleButton.LayoutTransform>
                            </ToggleButton>
                        </StackPanel>
                    </DockPanel>


                </DockPanel>
            </md:Card>

            <DockPanel DockPanel.Dock="Top">
                <Border Background="{DynamicResource ImageRoll_Brush_Active50}" Style="{StaticResource groupLeft}" />
                <Border Background="{DynamicResource ImageRoll_Brush_Active50}" Style="{StaticResource groupBottom}" />

                <!--
                    DrawerHost that contains the editing UI for an image roll.
                    It appears from the top when a new image roll is being created or an existing one is edited.
                -->
                <md:DrawerHost
                    x:Name="DrwEditImageRoll"
                    OpenMode="Modal"
                    TopDrawerCloseOnClickAway="False">
                    <md:DrawerHost.Style>
                        <Style TargetType="md:DrawerHost">
                            <Setter Property="IsTopDrawerOpen" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NewImageRoll, Converter={StaticResource IsNullOrEmpty}}" Value="False">
                                    <Setter Property="IsTopDrawerOpen" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </md:DrawerHost.Style>

                    <!--  The content of the drawer is the ImageRollEntryEdit user control.  -->
                    <md:DrawerHost.TopDrawerContent>
                        <local:ImageRollEntryEdit DataContext="{Binding NewImageRoll}" Visibility="{Binding ., Converter={StaticResource IsNullOrEmptyVisibility}}" />
                    </md:DrawerHost.TopDrawerContent>

                    <!--  Tab control to display User Image Rolls, grouped by standard.  -->
                    <mah:MetroTabControl
                        x:Name="TabCtlUserIr"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBool}}"
                        ItemContainerStyle="{StaticResource UserImageRollTabItemStyle}"
                        ItemTemplate="{StaticResource ImageRollTabHeaderTemplate}"
                        ItemsSource="{Binding Groups, Source={StaticResource ResourceKey=UserImageRolls}}"
                        Style="{StaticResource MahApps.Styles.TabControl}"
                        TabStripPlacement="Left" />
                </md:DrawerHost>
            </DockPanel>
        </DockPanel>

        <!--  =====================================================================================  -->
        <!--  Fixed Image Rolls Section  -->
        <!--  This section displays read-only, system-provided image rolls.  -->
        <!--  =====================================================================================  -->
        <DockPanel Grid.Row="1">

            <!--  Card containing the header for Fixed Image Rolls.  -->
            <md:Card
                Margin="3,3,0,0"
                Background="{DynamicResource MahApps.HamburgerMenu.Pane.Background}"
                DockPanel.Dock="Top"
                Foreground="{DynamicResource MahApps.HamburgerMenu.Pane.Foreground}">


                <DockPanel>
                    <Grid
                        Width="47"
                        VerticalAlignment="Stretch"
                        Background="{DynamicResource ImageRoll_Brush_Active50}">
                        <iconPacks:PackIconMaterial
                            Width="32"
                            Height="32"
                            Margin="1"
                            Padding="3"
                            HorizontalAlignment="Center"
                            Kind="FilmstripBoxMultiple" />
                        <iconPacks:PackIconMaterial
                            Width="16"
                            Height="16"
                            Margin="5,0,0,6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource MahApps.Brushes.Control.Background}"
                            Kind="Lock" />
                    </Grid>

                    <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                        <DockPanel.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="{DynamicResource ImageRoll_Color_Active50}" />
                                <GradientStop Offset="1" Color="{DynamicResource MahApps.Colors.HamburgerMenu}" />
                            </LinearGradientBrush>
                        </DockPanel.Background>


                        <TextBlock
                            Margin="6,0,6,3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Top"
                            Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"
                            Text="Fixed Image Rolls" />

                    </DockPanel>



                </DockPanel>
            </md:Card>

            <DockPanel>
                <Border Background="{DynamicResource ImageRoll_Brush_Active50}" Style="{StaticResource groupLeft}" />
                <Border Background="{DynamicResource ImageRoll_Brush_Active50}" Style="{StaticResource groupBottom}" />

                <!--  Tab control to display Fixed Image Rolls, grouped by standard.  -->
                <mah:MetroTabControl
                    x:Name="TabCtlFixedIr"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBool}}"
                    ItemContainerStyle="{StaticResource FixedImageRollTabItemStyle}"
                    ItemTemplate="{StaticResource ImageRollTabHeaderTemplate}"
                    ItemsSource="{Binding Groups, Source={StaticResource ResourceKey=FixedImageRolls}}"
                    Style="{StaticResource MahApps.Styles.TabControl}"
                    TabStripPlacement="Left" />


            </DockPanel>
        </DockPanel>
    </Grid>
</UserControl>