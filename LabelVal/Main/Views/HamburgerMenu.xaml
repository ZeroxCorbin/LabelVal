<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    
                    xmlns:local="clr-namespace:LabelVal.Main.Views"
                    xmlns:viewModels="clr-namespace:LabelVal.Main.ViewModels"
                    
                     xmlns:loc="clr-namespace:LabelVal.Localization"
                    
                    xmlns:printer="clr-namespace:LabelVal.Printer.Views"
                    xmlns:printerVm="clr-namespace:LabelVal.Printer.ViewModels"
                    xmlns:results="clr-namespace:LabelVal.Results.Views"
                    xmlns:resultsVm="clr-namespace:LabelVal.Results.ViewModels"
                    xmlns:run="clr-namespace:LabelVal.Run.Views"
                    xmlns:runVm="clr-namespace:LabelVal.Run.ViewModels"
                    xmlns:v275="clr-namespace:LabelVal.V275.Views"
                    xmlns:v275Vm="clr-namespace:LabelVal.V275.ViewModels"
                    xmlns:v5="clr-namespace:LabelVal.V5.Views"
                    xmlns:v5Vm="clr-namespace:LabelVal.V5.ViewModels"
                    xmlns:L95xx="clr-namespace:LabelVal.LVS_95xx.Views"
                    xmlns:L95xxVm="clr-namespace:LabelVal.LVS_95xx.ViewModels"
                    
                    xmlns:converters="clr-namespace:LabelVal.Converters"
                    xmlns:printerConverters="clr-namespace:LabelVal.Printer.Converters">

    <converters:ObjectIsNull x:Key="objectIsNull"/>
    <converters:LocalizeEnumValue x:Key="localizeEnumValue"/>
    <converters:MACAddressSplitConverter x:Key="macAddressSplitConverter"/>

    <DataTemplate x:Key="printerContent">
        <Grid Visibility="Collapsed"/>
    </DataTemplate>
    <DataTemplate x:Key="imageRDContent">
        <results:ImageResultsDatabases/>
    </DataTemplate>
    <DataTemplate x:Key="runContent">
        <Grid Visibility="Collapsed"/>
    </DataTemplate>
    <DataTemplate x:Key="v275Content">
        <v275:V275Manager/>
    </DataTemplate>
    <DataTemplate x:Key="v5Content">
        <v5:ScannerManager/>
    </DataTemplate>
    <DataTemplate x:Key="l95xxContent">
        <L95xx:VerifierManager/>
    </DataTemplate>

    <!--Printer Menu-->
    <DataTemplate x:Key="printerMenuItem">
        <DockPanel>
            <Border Style="{StaticResource hamMenuBottomBar}"/>

            <DockPanel Width="48" Height="48">
                <iconPacks:PackIconMaterial Width="36" Height="36" Kind="Printer" 
                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>

            <Border Style="{StaticResource imageBar}"/>

            <printer:Printer DataContext="{Binding Content}"/>

        </DockPanel>
    </DataTemplate>

    <!--Results Databases-->
    <DataTemplate x:Key="imageRDMenuItem" DataType="{x:Type resultsVm:ImageResultsDatabases}">
        <!--DataContext must be set to Content here.-->
        <DockPanel DataContext="{Binding Content}">

            <Border Style="{StaticResource hamMenuBottomBar}"/>

            <DockPanel Width="48" Height="48">
                <StackPanel Width="36" Height="36" VerticalAlignment="Center" Margin="0,2">
                    <iconPacks:PackIconMaterial Height="14" Width="30" Kind="ImageText" HorizontalAlignment="Center"/>
                    <iconPacks:PackIconMaterial Margin="0,0,0,1" Height="6" Kind="ChevronDown" HorizontalAlignment="Center"/>
                    <iconPacks:PackIconMaterial Height="14" Width="36" Kind="Database" HorizontalAlignment="Center"/>
                </StackPanel>
            </DockPanel>

            <Border Style="{StaticResource imageBar}"/>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <iconPacks:PackIconMaterial Kind="Database" VerticalAlignment="Center" Margin="6,3,6,0"/>

                <md:Card Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,3"  
                                         Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                         Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}">

                    <TextBlock Margin="6,3" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}">
                                <Setter Property="Text" Value="{Binding SelectedDatabase.FileName}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedDatabase, Converter={StaticResource objectIsNull}}" Value="True">
                                        <Setter Property="Text" Value="NO DATABASE SELECTED"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </md:Card>

                <DockPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="0,0,0,3">
                    <iconPacks:PackIconMaterial Margin="3" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <iconPacks:PackIconMaterial.Style>
                            <Style TargetType="{x:Type iconPacks:PackIconMaterial}">
                                <Setter Property="Kind" Value="LockOpenVariant"/>
                                <Setter Property="ToolTip" Value="Database is unlocked."/>

                                <Style.Triggers>

                                    <DataTrigger Binding="{Binding SelectedDatabase.IsLocked}" Value="True">
                                        <Setter Property="Kind" Value="Lock"/>
                                        <Setter Property="ToolTip" Value="Database is locked."/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding SelectedDatabase.IsPermLocked}" Value="True">
                                        <Setter Property="Kind" Value="DatabaseLock"/>
                                        <Setter Property="ToolTip" Value="Database is premanently locked."/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconMaterial.Style>
                    </iconPacks:PackIconMaterial>
                </DockPanel>

            </Grid>
        </DockPanel>
    </DataTemplate>

    <!--Run-->
    <DataTemplate x:Key="runMenuItem" DataType="{x:Type runVm:RunControl}">
        <!--DataContext must be set to Content here.-->
        <DockPanel DataContext="{Binding Content}">
            <Border Style="{StaticResource hamMenuBottomBar}"/>

            <DockPanel Width="48" Height="48">
                <iconPacks:PackIconMaterial Width="36" Height="36" Kind="Run" 
                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>

            <Border Style="{StaticResource imageBar}"/>

            <DockPanel Margin="10,0" HorizontalAlignment="Stretch" VerticalAlignment="Center">

                <mah:NumericUpDown Value="{Binding LoopCount}" Minimum="1" Maximum="999" Interval="1" Width="78" Height="30" HorizontalAlignment="Center"/>

                <Grid HorizontalAlignment="Left">
                    
                    <Button Command="{Binding StartStopCommand}" Width="36" Height="36">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Hamburger}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Content" Value="{iconPacks:Material Kind=Play, Width=24, Height=24}"/>
                                <Style.Triggers>
                                    <DataTrigger Value="False" Binding="{Binding SelectedNode.IsLoggedIn_Control}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="Running" Binding="{Binding RunController.State}">
                                        <Setter Property="Content" Value="{iconPacks:Material Kind=Stop, Width=24, Height=24}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <mah:ProgressRing Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Width="36" Height="36">
                        <mah:ProgressRing.Style>
                            <Style TargetType="{x:Type mah:ProgressRing}">
                                <Setter Property="IsActive" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Value="Running" Binding="{Binding RunController.State}">
                                        <Setter Property="IsActive" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </mah:ProgressRing.Style>
                    </mah:ProgressRing>
                </Grid>

                <Button Command="{Binding OpenRunWindowCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>
            </DockPanel>

        </DockPanel>
    </DataTemplate>

    <!--V275-->
    <DataTemplate x:Key="v275MenuItem">
        <DockPanel>
            <Border Style="{StaticResource hamMenuBottomBar}"/>

            <DockPanel MinHeight="48" Width="48" Background="{DynamicResource ColorBlindBrush1}">
                <Image Width="36" Height="36" Source="/Assets/Images/v275-white-outline.ico" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>

            <Border Style="{StaticResource imageBar}"/>

            <!--Show the label name if not node is selected.-->
            <DockPanel>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Content.SelectedNode, Converter={StaticResource objectIsNull}}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <TextBlock Text="{Binding Label}" VerticalAlignment="Center" Margin="10,0,0,0"/>
            </DockPanel>

            <DockPanel>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Content.SelectedNode, Converter={StaticResource objectIsNull}}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <v275:NodeItem IsDocked="True" DataContext="{Binding Content.SelectedNode}"/>

            </DockPanel>

        </DockPanel>
    </DataTemplate>

    <!--V5-->
    <DataTemplate x:Key="v5MenuItem">
        <DockPanel>

            <Border Style="{StaticResource hamMenuBottomBar}"/>

            <DockPanel Width="48" MinHeight="48" Background="{DynamicResource OrangeBrush1}">
                <Image Width="36" Height="36" Source="/Assets/Images/v5-white-outline.ico" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>

            <Border Style="{StaticResource imageBar}"/>

            <!--Show the label name if not node is selected.-->
            <DockPanel>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Content.SelectedScanner, Converter={StaticResource objectIsNull}}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <TextBlock Text="{Binding Label}" VerticalAlignment="Center" Margin="10,0,0,0"/>
            </DockPanel>

            <DockPanel DockPanel.Dock="Top">
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Content.SelectedScanner, Converter={StaticResource objectIsNull}}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <v5:Scanner IsDocked="True" DataContext="{Binding Content.SelectedScanner}"/>

            </DockPanel>
        </DockPanel>
    </DataTemplate>

    <!--L95xx-->
    <DataTemplate x:Key="l95xxMenuItem">
        <DockPanel>

            <DockPanel Width="48" MinHeight="48" Background="{DynamicResource OrangeBrush0}">
                <Image Width="36" Height="36" Source="/Assets/Images/l95xx-white-outline.ico" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </DockPanel>

            <Border Style="{StaticResource imageBar}"/>

            <DockPanel>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Content.SelectedVerifier, Converter={StaticResource objectIsNull}}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <TextBlock Text="{Binding Label}" VerticalAlignment="Center" Margin="10,0,0,0"/>

            </DockPanel>

            <DockPanel DockPanel.Dock="Top">
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Content.SelectedVerifier, Converter={StaticResource objectIsNull}}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <L95xx:Verifier IsDocked="True" DataContext="{Binding Content.SelectedVerifier}"/>

            </DockPanel>
        </DockPanel>
    </DataTemplate>


    <viewModels:TemplateSelector x:Key="menuItemTemplateSelector"
                                        Printer="{StaticResource printerMenuItem}"
                                        Run="{StaticResource runMenuItem}"
                                        V275="{StaticResource v275MenuItem}"
                                        V5="{StaticResource v5MenuItem}"
                                        L96XX="{StaticResource l95xxMenuItem}"
                                        ImageResultsDatabases="{StaticResource imageRDMenuItem}"/>

    <viewModels:TemplateSelector x:Key="contentItemTemplateSelector"
                                        Printer="{StaticResource printerContent}"
                                        Run="{StaticResource runContent}"
                                        V275="{StaticResource v275Content}"
                                        V5="{StaticResource v5Content}"
                                        L96XX="{StaticResource l95xxContent}"
                                        ImageResultsDatabases="{StaticResource imageRDContent}"/>

</ResourceDictionary>