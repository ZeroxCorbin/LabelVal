<UserControl x:Class="LabelVal.WindowViews.LabelControlView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
            xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
            xmlns:local="clr-namespace:LabelVal.WindowViews"
             xmlns:json="clr-namespace:JsonViewer.JsonViewer"
            xmlns:ViewModels="clr-namespace:LabelVal.WindowViewModels"
            xmlns:Converters="clr-namespace:LabelVal.Converters"
              xmlns:V275Converters="clr-namespace:LabelVal.V275.Converters"
            xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
            Dialog:DialogParticipation.Register="{Binding}"
            d:DataContext="{d:DesignInstance Type=ViewModels:LabelControlViewModel}"
            mc:Ignorable="d" 
            d:DesignHeight="450" d:DesignWidth="1424" Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booltovis"/>
        <Converters:BytesToImageConverter x:Key="bytesToImage"/>
        <Converters:ShortenUIDConverter x:Key="shortenUID"/>
        <Converters:StringToUpperSpacedConverter x:Key="stringToUpper"/>
        <Converters:FloatStringTrimConverter x:Key="floatTrim"/>
        <V275Converters:V275_OCMatchModeToString x:Key="matchModeToString"/>
        <Converters:IsObjectNotNull x:Key="isObjectNotNull"/>

        <ContextMenu x:Key="cmImageModify">
            <MenuItem Command="{Binding RedoFiducial}" Header="Registration Mark"/>
        </ContextMenu>
    </UserControl.Resources>

    <Border BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5" HorizontalAlignment="Left">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="230"/>
                <ColumnDefinition Width="230"/>
                <ColumnDefinition Width="280"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Popup x:Name="LabelSectorsDetailsPopup" StaysOpen="False">
                <Popup.Style>
                    <Style TargetType="{x:Type Popup}"/>
                </Popup.Style>

                <Border Grid.Row="2" Grid.ColumnSpan="4" Padding="3" BorderThickness="2"
                        BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}">

                    <ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding LabelSectors}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" MaxWidth="1024"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:SectorDetailsControlView/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>

            </Popup>
            <Popup x:Name="RepeatSectorsDetailsPopup" StaysOpen="False">
                <Popup.Style>
                    <Style TargetType="{x:Type Popup}"/>
                </Popup.Style>
                <Border Padding="3" BorderThickness="2"
                        BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}">

                    <ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding RepeatSectors}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" MaxWidth="1024"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:SectorDetailsControlView />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
            </Popup>
            <Popup x:Name="RepeatJsonPopup" StaysOpen="False">
                <Popup.Style>
                    <Style TargetType="{x:Type Popup}"/>
                </Popup.Style>
                <Border Padding="3" BorderThickness="2"
                        BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}">
                    <json:JsonViewer x:Name="RepeatResultJsonView"/>
                </Border>
            </Popup>
            <Popup x:Name="LabelJsonPopup" StaysOpen="False">
                <Popup.Style>
                    <Style TargetType="{x:Type Popup}"/>
                </Popup.Style>
                <StackPanel Orientation="Horizontal">
                    <Border Padding="3" BorderThickness="2"
                            BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                            Background="{DynamicResource MahApps.Brushes.ThemeBackground}">
                        <json:JsonViewer x:Name="LabelJobJsonView"/>
                    </Border>
                    <Border Padding="3" BorderThickness="2"
                            BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                            Background="{DynamicResource MahApps.Brushes.ThemeBackground}">
                        <json:JsonViewer x:Name="LabelResultJsonView"/>
                    </Border>
                </StackPanel>
            </Popup>

            <!--Label Image-->
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Grid.RowSpan="2">
                    <TextBlock Text="Label UID" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding LabelImageUID, Converter={StaticResource shortenUID}}" ToolTip="{Binding LabelImageUID}"/>
                </StackPanel>
                <!--<TextBlock Grid.Column="1" Grid.Row="0"
                           Text="Label Image" HorizontalAlignment="Center" Margin="0,0,30,0"
                           ToolTip="The Label Image file from the '.\Standards' directory."/>-->
                <Button Grid.Column="2" Grid.Row="1" Margin="5" HorizontalAlignment="Right"
                        Command="{Binding SaveCommand}"
                        CommandParameter="label" BorderThickness="0">

                    <IconPacks:Material Kind="ContentSave"/>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LabelImage}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <StackPanel Grid.Column="1" Grid.Row="1"
                            Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding MainWindow.IsDeviceSimulator}" Value="True"/>
                                        <Condition Binding="{Binding IsGoldenRepeat}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <mah:NumericUpDown Value="{Binding PrintCount}" Minimum="1" Maximum="100" Interval="1" Margin="2"
                                           IsEnabled="{Binding MainWindow.IsNotLoggedIn_Control}"/>

                    <Button Margin="2"
                            Command="{Binding PrintCommand}"
                            CommandParameter="label">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" Value="Print"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MainWindow.IsDeviceSimulator}" Value="True">
                                        <Setter Property="Content" Value="Process"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <mah:ProgressRing IsActive="{Binding IsWorking}" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Height="30" Width="30"/>

                </StackPanel>
            </Grid>

            <Border BorderThickness="1" Margin="1" Grid.Row="1" Grid.Column="0" BorderBrush="{StaticResource MahApps.Brushes.Accent}">
                <Grid>
                    <Image x:Name="LabelImage" MaxHeight="400" Width="400"
                       Source="{Binding LabelImage, Converter={StaticResource bytesToImage}}"
                       MouseDown="LabelImage_MouseDown"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                       HorizontalAlignment="Left" VerticalAlignment="Top"
                       ContextMenu="{StaticResource cmImageModify}" ContextMenuOpening="LabelImage_ContextMenuOpening"/>

                    <Label HorizontalAlignment="Right" VerticalAlignment="Top" Margin="3">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Grid Background="White">
                                            <IconPacks:PackIconMaterial Width="20" Height="20" Kind="Information" Foreground="Red"/>
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="{Binding LabelComment}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LabelComment}" Value="">
                                        <Setter Property="Content" Value=""/>
                                        <Setter Property="ToolTip" Value="{x:Null}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>

                    </Label>

                    <!--<TextBlock Text="{Binding LabelComment}" Foreground="Red" Margin="3" HorizontalAlignment="Left"/>-->
                </Grid>
            </Border>
            <!--Label Sectors-->
            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">

                    <Button Content="Clear" Command="{Binding ClearStored}" Margin="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLoad}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding MainWindow.IsDatabaseLocked}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Content="Load" Command="{Binding LoadCommand}" Margin="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding MainWindow.IsLoggedIn_Control}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Value="False" Binding="{Binding IsLoad}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Value="Running" Binding="{Binding MainWindow.V275.V275_State}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Value="Idle" Binding="{Binding MainWindow.V275.V275_State}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <Button Grid.Column="2" Name="LabelSectors" Click="LabelSectors_Click" Margin="5"
                            BorderThickness="0" HorizontalAlignment="Center">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoad}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <IconPacks:PackIconModern Width="20" Height="20" Kind="Eye"/>
                </Button>
            </Grid>
            <ScrollViewer Grid.Row="1" Grid.Column="1" x:Name="ScrollLabelSectors"
                          Margin="3" MaxHeight="400" VerticalScrollBarVisibility="Auto"
                          mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="True"
                          ScrollChanged="ScrollLabelSectors_ScrollChanged">
                <ItemsControl ItemsSource="{Binding LabelSectors}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:SectorControlView />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!--Repeat Sectors-->
            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!--<Button Content="Repeat Sectors" HorizontalAlignment="Center" Name="RepeatSectors" Click="RepeatSectors_Click"
                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                        Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <TextBlock Text="{TemplateBinding Content}"/>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.LayoutTransform>
                        <ScaleTransform ScaleX="0.86" ScaleY="0.86"/>
                    </Button.LayoutTransform>
                </Button>-->

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">

                    <Button Content="Store" Command="{Binding StoreCommand}" Margin="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsStore}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding MainWindow.IsDatabaseLocked}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Content="Clear" Command="{Binding ClearRead}" Margin="2"
                            Visibility="{Binding IsStore, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <Button Content="Read" Command="{Binding ReadCommand}" Margin="2" 
                        Visibility="{Binding MainWindow.IsLoggedIn_Monitor, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <Button Content="Read" Command="{Binding InspectCommand}" Margin="2"
                            Visibility="{Binding MainWindow.IsLoggedIn_Control, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <!--<Label Content="{Binding Status}"/>-->
                </StackPanel>

                <Button Grid.Column="2" Name="RepeatSectors" Click="RepeatSectors_Click" Margin="0"
                            BorderThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStore}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <IconPacks:PackIconModern Width="20" Height="20" Kind="Eye"/>
                </Button>
            </Grid>
            <ScrollViewer Grid.Row="1" Grid.Column="2" x:Name="ScrollRepeatSectors"
                          Margin="3" MaxHeight="400" VerticalScrollBarVisibility="Auto"
                          mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="True"
                          ScrollChanged="ScrollRepeatSectors_ScrollChanged">

                <ItemsControl ItemsSource="{Binding RepeatSectors}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:SectorControlView />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!--Repeat Image-->
            <Grid Grid.Row="0" Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding MainWindow.IsDeviceSimulator}" Value="True"/>
                                    <Condition Binding="{Binding IsGoldenRepeat}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <!--<TextBlock Grid.Column="1" Text="Repeat Image" HorizontalAlignment="Center" Margin="0,0,10,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTip" Value="The Repeat Image for the current Repeat Sectors."/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGoldenRepeat}" Value="True">
                                    <Setter Property="ToolTip" Value="The 'Golden' Repeat Image stored in the database."/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RepeatImage}" Value="{x:Null}">
                                    <Setter Property="ToolTip" Value="No image stored or read."/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>

                </TextBlock>-->

                <Button Grid.Column="1" Grid.Row="1" Content="Process" Margin="2"
                        Command="{Binding PrintCommand}"
                        CommandParameter="repeat" HorizontalAlignment="Center"/>



                <Label Grid.Column="0" Grid.Row="1" Foreground="Goldenrod" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="The 'Golden' Repeat Image stored in the database.">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGoldenRepeat}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                    <Label.Content>
                        <IconPacks:Material Kind="Gold"/>
                    </Label.Content>
                </Label>

                <mah:ProgressRing Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" IsActive="{Binding IsWorking}" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Height="30" Width="30"/>

                <Button Grid.Column="2" Grid.Row="1" Margin="5" HorizontalAlignment="Right"
                        Command="{Binding SaveCommand}"
                        CommandParameter="repeat" BorderThickness="0">

                    <IconPacks:Material Kind="ContentSave"/>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RepeatImage}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <Button Grid.Row="0" Grid.Column="4" Margin="5" HorizontalAlignment="Right"
                        Command="{Binding SaveCommand}"
                        CommandParameter="repeat" BorderThickness="0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding MainWindow.IsDeviceSimulator}" Value="True"/>
                                    <Condition Binding="{Binding IsGoldenRepeat}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding RepeatImage}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <IconPacks:Material Kind="ContentSave"/>
            </Button>


            <Border BorderThickness="1" Margin="1" Grid.Row="1" Grid.Column="4" BorderBrush="{StaticResource MahApps.Brushes.Accent}">
                <Grid>
                    <Image Name="RepeatImage" Source="{Binding RepeatImage, Converter={StaticResource bytesToImage}}" 
                       Margin="0" Height="400" Width="400" MouseDown="RepeatImage_MouseDown"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>

                    <Image Name="RepeatImageOverlay" Source="{Binding RepeatOverlay}" 
                       Margin="0" Height="400" Width="400" MouseDown="RepeatImage_MouseDown"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                </Grid>
            </Border>


            <ScrollViewer Grid.Row="1" Grid.Column="3"
                          Margin="3" MaxHeight="400" VerticalScrollBarVisibility="Auto"
                          mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="True">
                <ItemsControl ItemsSource="{Binding DiffSectors}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:SectorDifferenceControlView />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>



        </Grid>
    </Border>
</UserControl>
