<UserControl x:Class="LabelVal.WindowViews.LabelControlView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
            xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
            xmlns:local="clr-namespace:LabelVal.WindowViews"
            xmlns:ViewModels="clr-namespace:LabelVal.WindowViewModels"
            xmlns:Converters="clr-namespace:LabelVal.Converters"
            xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:paz="clr-namespace:Wpf.Controls.PanAndZoom;assembly=Wpf.Controls.PanAndZoom"
              Dialog:DialogParticipation.Register="{Binding}"
            d:DataContext="{d:DesignInstance Type=ViewModels:LabelControlViewModel}"
            mc:Ignorable="d" 
            d:DesignHeight="450" d:DesignWidth="1024" Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booltovis"/>
        <Converters:BytesToImageConverter x:Key="bytesToImage"/>
        <Converters:ShortenUIDConverter x:Key="shortenUID"/>
    </UserControl.Resources>

    <Border BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Grid.RowSpan="2">
                    <TextBlock Text="Label UID" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding LabelImageUID, Converter={StaticResource shortenUID}}" ToolTip="{Binding LabelImageUID}"/>
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="0" Text="Label Image" HorizontalAlignment="Center" Margin="0,0,30,0"
                           ToolTip="The Label Image file from the '.\Standards' directory."/>

                <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">

                    <mah:NumericUpDown Value="{Binding PrintCount}" Minimum="1" Maximum="100" Interval="1" Margin="2"
                                           IsEnabled="{Binding IsNotLoggedIn_Control}"/>

                    <Button Margin="2"
                            Command="{Binding PrintCommand}"
                            CommandParameter="label">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" Value="Print"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSimulation}" Value="True">
                                        <Setter Property="Content" Value="Process"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <mah:ProgressRing IsActive="{Binding IsWorking}" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Height="30" Width="30"/>

                </StackPanel>
            </Grid>

            <Grid Grid.Row="1" Grid.Column="0">
                <Image x:Name="LabelImage" Margin="3" MaxHeight="400" Width="400"
                       Source="{Binding LabelImage, Mode=OneTime, Converter={StaticResource bytesToImage}}"
                       MouseDown="LabelImage_MouseDown"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                
                <TextBlock Text="{Binding LabelComment}" Foreground="Red" Margin="3" HorizontalAlignment="Left"/>
            </Grid>

            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Text="Label Sectors" HorizontalAlignment="Center"/>

                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">

                    <Button Content="Clear" Command="{Binding ClearStored}" Margin="2"
                            Visibility="{Binding IsLoad, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <Button Content="Load" Command="{Binding LoadCommand}" Margin="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Value="False" Binding="{Binding IsLoad}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </StackPanel>
            </Grid>

            <ScrollViewer x:Name="ScrollLabelSectors"
                          Grid.Row="1" Grid.Column="1" Width="200" Margin="3" MaxHeight="400" 
                          mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="True"
                          ScrollChanged="ScrollLabelSectors_ScrollChanged">
                <ItemsControl ItemsSource="{Binding LabelSectors}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:SectorControlView />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Text="Repeat Sectors" HorizontalAlignment="Center"/>

                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">

                    <Button Content="Store" Command="{Binding StoreCommand}" Margin="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsStore}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Content="Clear" Command="{Binding ClearRead}" Margin="2"
                            Visibility="{Binding IsStore, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <Button Content="Read" Command="{Binding ReadCommand}" Margin="2" 
                        Visibility="{Binding IsLoggedIn_Monitor, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <Button Content="Read" Command="{Binding InspectCommand}" Margin="2"
                            Visibility="{Binding IsLoggedIn_Control, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Label Content="{Binding Status}"/>
                </StackPanel>
            </Grid>

            <ScrollViewer x:Name="ScrollRepeatSectors"
                          Grid.Row="1" Grid.Column="2" Width="200" Margin="3" MaxHeight="400"
                          mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="True"
                          ScrollChanged="ScrollRepeatSectors_ScrollChanged">
                
                <ItemsControl ItemsSource="{Binding RepeatSectors}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:SectorControlView />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <Grid Grid.Column="3" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Column="1" Text="Repeat Image" HorizontalAlignment="Center" Margin="0,0,10,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTip" Value="The Repeat Image for the current Repeat Sectors."/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGoldenRepeat}" Value="True">
                                    <Setter Property="ToolTip" Value="The 'Golden' Repeat Image stored in the database."/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RepeatImage}" Value="{x:Null}">
                                    <Setter Property="ToolTip" Value="No image stored or read."/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>                        
                    </TextBlock.Style>

                </TextBlock>

                <Button Grid.Column="1" Grid.Row="1" Content="Process" Margin="2"
                        Command="{Binding PrintCommand}"
                        CommandParameter="repeat">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSimulation}" Value="True"/>
                                        <Condition Binding="{Binding IsGoldenRepeat}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding RepeatImage}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                
                <Label Grid.Column="2" Foreground="Goldenrod" HorizontalAlignment="Left" Padding="0" ToolTip="The 'Golden' Repeat Image stored in the database.">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGoldenRepeat}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                    <Label.Content>
                        <IconPacks:Material Kind="Gold"/>
                    </Label.Content>
                </Label>
            </Grid>
            
            <Grid Grid.Row="1" Grid.Column="3" >
                <Image Name="RepeatImage" Source="{Binding RepeatImage, Converter={StaticResource bytesToImage}}" 
                       Margin="3" Height="400" Width="400" MouseDown="RepeatImage_MouseDown"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            </Grid>


        </Grid>
    </Border>
</UserControl>
