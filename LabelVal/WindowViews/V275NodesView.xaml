<UserControl x:Class="LabelVal.WindowViews.V275NodesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LabelVal.WindowViews"
             xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             
             xmlns:ViewModels="clr-namespace:LabelVal.WindowViewModels"  
                d:DataContext="{d:DesignInstance Type=ViewModels:V275NodesViewModel}"
             mc:Ignorable="d">
    <DockPanel>
        <!--V275 Node connection-->
        <Border BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
            <StackPanel Orientation="Horizontal"  Margin="3">

                <Label Padding="1">
                    <Label.Content>
                        <IconPacks:PackIconModern Width="15" Height="15" Kind="InformationCircle"/>
                    </Label.Content>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock Text="{Binding V275_Version, StringFormat='V275 Software Version: {0}'}"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding V275_Version}" Value="{x:Null}">
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <TextBlock Text="Click 'Get Nodes'"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <Label Content="Node Connection"/>

                <Button Content="Get Nodes"
                    Command="{Binding GetDevicesCommand}"
                    IsEnabled="{Binding IsNotLoggedIn}"/>

                <Label/>

                <ComboBox ItemsSource="{Binding Nodes}" Margin="0,0,2,0"
                          SelectedValue="{Binding SelectedNode}"
                          IsEnabled="{Binding IsNotLoggedIn}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=enumeration, Mode=OneTime, StringFormat='Slot: {0} Model: '}"/>
                                <TextBlock Text="{Binding Path=printerModel, Mode=OneTime}" />
                                <TextBlock Text="{Binding Path=cameraMAC, Mode=OneTime, StringFormat=' ({0})'}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <!--<TextBox mah:TextBoxHelper.Watermark="Board Stack IP" 
                         Text="{Binding Host}" MinWidth="80"/>-->
                <!--<TextBox mah:TextBoxHelper.Watermark="Path" 
                         Text="{Binding RootPath}" MinWidth="80"/>-->
                <!--<TextBox mah:TextBoxHelper.Watermark="User Name" 
                         Text="{Binding UserName}" MinWidth="80" Margin="0,0,2,0"
                     IsEnabled="{Binding IsNotLoggedIn}"/>
                    <TextBox mah:TextBoxHelper.Watermark="Password" 
                         Text="{Binding Password}" MinWidth="80"
                     IsEnabled="{Binding IsNotLoggedIn}"/>-->
                <Label/>
                <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsGetDevices}" >
                    <Button Content="Logout" Margin="0,0,2,0"
                            Command="{Binding LogoutCommand}"
                            IsEnabled="{Binding IsLoggedIn}"/>

                    <Button Content="Monitor" Margin="0,0,2,0"
                            Command="{Binding LoginMonitorCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control}"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn}">
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="False" Binding="{Binding IsDeviceSelected}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Monitor}">
                                        <Setter Property="Background" Value="{DynamicResource CB_Green}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Content="Control"
                            Command="{Binding LoginControlCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control}"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn}">
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="False" Binding="{Binding IsDeviceSelected}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Monitor}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                        <Setter Property="Background" Value="{DynamicResource CB_Green}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>


                </StackPanel>

            </StackPanel>
        </Border>

        <!--V275 State Data-->
        <Border Grid.Column="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Value="False" Binding="{Binding IsLoggedIn}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <StackPanel Orientation="Horizontal"  Margin="3">

                <Label Content="Template:"/>

                <Label>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Background" Value="{DynamicResource ColorBlindBrush5}"/>
                            <Setter Property="Content" Value="{Binding V275_JobName}"/>
                            <Style.Triggers>
                                <DataTrigger Value="False" Binding="{Binding IsWrongTemplateName}">
                                    <Setter Property="Background" Value="{DynamicResource CB_Green}"/>
                                </DataTrigger>
                                <DataTrigger Value="" Binding="{Binding V275_JobName}">
                                    <Setter Property="Content" Value="-----"/>
                                    <Setter Property="Background" Value="{DynamicResource ColorBlindBrush5}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <Label Content="State:"/>

                <Label Content="{Binding V275_State}">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Background" Value="{DynamicResource ColorBlindBrush5}"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="Editing" Binding="{Binding V275_State}" />
                                        <Condition Value="True" Binding="{Binding SelectedStandard.IsGS1}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource CB_Green}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="Running" Binding="{Binding V275_State}" />
                                        <Condition Value="False" Binding="{Binding SelectedStandard.IsGS1}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource CB_Green}" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <Label/>
                <Button Content="Run" Margin="0,0,2,0"
                            Command="{Binding V275_SwitchRunCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="Editing" Binding="{Binding V275_State}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Value="True" Binding="{Binding SelectedStandard.IsGS1}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Edit" Margin="0,0,2,0"
                            Command="{Binding V275_SwitchEditCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="Running" Binding="{Binding V275_State}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Value="Paused" Binding="{Binding V275_State}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Content="Remove"
                            Command="{Binding V275_RemoveRepeatCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="True" Binding="{Binding IsLoggedIn_Control}"/>
                                        <Condition Value="Paused" Binding="{Binding V275_State}"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Border>

    </DockPanel>
</UserControl>
