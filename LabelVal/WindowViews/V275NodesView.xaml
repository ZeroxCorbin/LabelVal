<UserControl x:Class="LabelVal.WindowViews.V275NodesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LabelVal.WindowViews"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:ViewModels="clr-namespace:LabelVal.WindowViewModels"  
             d:DataContext="{d:DesignInstance Type=ViewModels:V275NodesViewModel}"
             mc:Ignorable="d">

    <GroupBox
            md:ColorZoneAssist.Background="{DynamicResource MahApps.Brushes.Accent4}"
            md:ColorZoneAssist.Foreground="{DynamicResource MahApps.Brushes.Foreground}"
            md:ColorZoneAssist.Mode="Custom"
            BorderThickness="0"
            Margin="3" Padding="3"
            HorizontalAlignment="Left" VerticalAlignment="Top" 
            Style="{StaticResource MaterialDesignCardGroupBox}">

        <GroupBox.Header>
            <DockPanel>
                <md:Card Background="{DynamicResource MahApps.Brushes.Control.Background}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="1">
                    <TextBlock Text="V275 Nodes" FontSize="{DynamicResource MahApps.Font.Size.ContextMenu}"/>
                </md:Card>

                <Button Command="{Binding GetDevicesCommand}" Style="{StaticResource MaterialDesignFloatingActionDarkButton}"
                        Padding="0" Margin="5,0" BorderThickness="0" Height="20" Width="20" HorizontalAlignment="Left">
                    <iconPacks:Modern Width="12" Height="12" Kind="Refresh"/>
                </Button>

            </DockPanel>
        </GroupBox.Header>

        <md:Card Background="{DynamicResource MahApps.Brushes.Control.Background}" Padding="2">

            <StackPanel>
                <!--V275 Node connection-->

                    <DockPanel>
                        <DockPanel.Style>
                            <Style TargetType="DockPanel">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Nodes.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>

                        <Button Content="Logout" Command="{Binding LogoutCommand}" IsEnabled="{Binding IsLoggedIn}" Margin="3,0"/>

                        <Button Content="Monitor" Command="{Binding LoginMonitorCommand}" Margin="3,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control}"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn}">
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="{x:Null}" Binding="{Binding SelectedNode}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Monitor}">
                                            <Setter Property="Background" Value="{DynamicResource CB_Green}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="Control" Command="{Binding LoginControlCommand}" Margin="3,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control}"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn}">
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="{x:Null}" Binding="{Binding SelectedNode}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Monitor}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                            <Setter Property="Background" Value="{DynamicResource CB_Green}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </DockPanel>

                <!--<ListBox ItemsSource="{Binding Nodes}" SelectedValue="{Binding SelectedNode}" IsHitTestVisible="{Binding IsNotLoggedIn}" Margin="3">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>

                                <TextBlock Text="{Binding Path=printerModel, Mode=OneTime}" />
                                <TextBlock Text="{Binding Path=cameraMAC, Mode=OneTime, StringFormat=' ({0})'}" />
                                
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>-->

                <ListView ItemsSource="{Binding Nodes}" SelectedItem="{Binding SelectedNode}">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <md:Card Background="{DynamicResource MahApps.Brushes.Accent4}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-5">
                                <local:V275NodeItemView DataContext="{Binding }"/>
                            </md:Card>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                    <!--<ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander>
                                                    <Expander.Style>
                                                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                                                            <Setter Property="BorderBrush" Value="Orange"/>
                                                            <Setter Property="Margin" Value="5"/>
                                                        </Style>
                                                    </Expander.Style>
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal" Margin="-10">

                                                            <TextBlock Text="{Binding Name}" Margin="5 2 5 2"/>
                                                            -->
                    <!--<TextBlock Text=":" Margin="0 2 5 2"/>
                                                 <TextBlock Text="{Binding ItemCount}" Margin="0 2 0 2"/>-->
                    <!--
                                                        </StackPanel>
                                                    </Expander.Header>

                                                    <ItemsPresenter />

                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListView.GroupStyle>-->
                </ListView>

            </StackPanel>

        </md:Card>
    </GroupBox>

</UserControl>
