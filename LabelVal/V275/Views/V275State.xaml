<UserControl x:Class="LabelVal.V275.Views.V275State"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LabelVal.V275.Views"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ViewModels="clr-namespace:LabelVal.V275.ViewModels"  
             d:DataContext="{d:DesignInstance Type=ViewModels:V275}"
             mc:Ignorable="d">

    <GroupBox BorderThickness="0" Margin="3" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top" 
                  Style="{StaticResource MaterialDesignCardGroupBox}"
                md:ColorZoneAssist.Background="{DynamicResource MahApps.Brushes.Accent4}"
                md:ColorZoneAssist.Mode="Custom">

        <GroupBox.Header>
            <DockPanel Margin="-5">
                <md:Card Background="{DynamicResource MahApps.Brushes.ThemeBackground}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="1">
                    <TextBlock Text="V275 State" FontSize="{DynamicResource MahApps.Font.Size.ContextMenu}"/>
                </md:Card>
            </DockPanel>
        </GroupBox.Header>

        <md:Card Background="{DynamicResource MahApps.Brushes.ThemeBackground}" Padding="2">

            <DockPanel>
                <DockPanel.Style>
                    <Style TargetType="{x:Type DockPanel}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Value="False" Binding="{Binding SelectedNode.IsLoggedIn}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>

                <Label Content="Template:"/>

                <Label>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Background" Value="{DynamicResource ColorBlindBrush5}"/>
                            <Setter Property="Content" Value="{Binding SelectedNode.JobName}"/>
                            <Style.Triggers>
                                <DataTrigger Value="False" Binding="{Binding IsWrongTemplateName}">
                                    <Setter Property="Background" Value="{DynamicResource CB_Green}"/>
                                </DataTrigger>
                                <DataTrigger Value="" Binding="{Binding SelectedNode.JobName}">
                                    <Setter Property="Content" Value="-----"/>
                                    <Setter Property="Background" Value="{DynamicResource ColorBlindBrush5}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <Label Content="State:"/>

                <Label Content="{Binding SelectedNode.State}">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Background" Value="{DynamicResource ColorBlindBrush5}"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="Editing" Binding="{Binding SelectedNode.State}" />
                                        <Condition Value="True" Binding="{Binding SelectedImageRoll.IsGS1}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource CB_Green}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="Running" Binding="{Binding SelectedNode.State}" />
                                        <Condition Value="False" Binding="{Binding SelectedImageRoll.IsGS1}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource CB_Green}" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <Button Content="Run" Margin="3,0" Command="{Binding V275_SwitchRunCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Value="True" Binding="{Binding SelectedNode.IsLoggedIn_Control}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="Editing" Binding="{Binding SelectedNode.State}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Value="True" Binding="{Binding MainWindow.ImageResultsDatabase.SelectedImageRoll.IsGS1}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Content="Edit" Margin="3,0" Command="{Binding V275_SwitchEditCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Value="True" Binding="{Binding SelectedNode.IsLoggedIn_Control}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="Running" Binding="{Binding SelectedNode.State}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Value="Paused" Binding="{Binding SelectedNode.State}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Content="Remove" Margin="3,0" Command="{Binding SelectedNode.RemoveRepeatCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="True" Binding="{Binding SelectedNode.IsLoggedIn_Control}"/>
                                        <Condition Value="Paused" Binding="{Binding SelectedNode.State}"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DockPanel>

        </md:Card>

    </GroupBox>
</UserControl>
