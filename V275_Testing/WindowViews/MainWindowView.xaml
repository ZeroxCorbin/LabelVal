<mah:MetroWindow x:Class="V275_Testing.WindowViews.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:local="clr-namespace:V275_Testing.WindowViews"
            xmlns:ViewModels="clr-namespace:V275_Testing.WindowViewModels"     
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"
        d:DataContext="{d:DesignInstance Type=ViewModels:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="V275 Testing" Height="450" Width="800" SaveWindowPosition="True">
    <mah:MetroWindow.DataContext>
        <ViewModels:MainWindowViewModel/>
    </mah:MetroWindow.DataContext>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>>

            <Button BorderThickness="0" 
                        x:Name="btnLightTheme"
                        Click="btnLightTheme_Click">
                <Button.Content>
                    <IconPacks:PackIconModern Width="20" Height="20" Kind="WeatherSun"/>
                </Button.Content>

            </Button>

            <Button BorderThickness="0" 
                        x:Name="btnDarkTheme"
                        Click="btnDarkTheme_Click">
                <Button.Content>
                    <IconPacks:PackIconModern Width="20" Height="20" Kind="MoonWaningCrescent"/>
                </Button.Content>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border Grid.Row="0" Grid.Column="0" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
                <StackPanel Orientation="Horizontal" Margin="3">
                    <Label Content="V275 System"/>

                    <TextBox mah:TextBoxHelper.Watermark="Host" 
                         Text="{Binding V275_Host}" MinWidth="80">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Setup}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <TextBox mah:TextBoxHelper.Watermark="System Port" 
                         Text="{Binding V275_SystemPort}" MinWidth="80">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Setup}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
            </Border>

            <Border Grid.Row="0" Grid.Column="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
                <StackPanel Orientation="Horizontal"  Margin="3">
                    
                    <Label Content="Node Connection"/>

                    <Button Content="Get Nodes"
                    Command="{Binding GetDevices}"
                    IsEnabled="{Binding IsNotLoggedIn}"/>

                    <ComboBox ItemsSource="{Binding Nodes}"
                          SelectedValue="{Binding SelectedNode}"
                          IsEnabled="{Binding IsNotLoggedIn}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=enumeration,StringFormat='Slot: {0} Model: '}" />
                                    <TextBlock Text="{Binding Path=printerModel}" />
                                    <TextBlock Text="{Binding Path=cameraMAC,StringFormat=' ({0})'}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <!--<TextBox mah:TextBoxHelper.Watermark="Board Stack IP" 
                         Text="{Binding Host}" MinWidth="80"/>-->
                    <!--<TextBox mah:TextBoxHelper.Watermark="Path" 
                         Text="{Binding RootPath}" MinWidth="80"/>-->
                    <TextBox mah:TextBoxHelper.Watermark="User Name" 
                         Text="{Binding UserName}" MinWidth="80"
                     IsEnabled="{Binding IsNotLoggedIn}"/>
                    <TextBox mah:TextBoxHelper.Watermark="Password" 
                         Text="{Binding Password}" MinWidth="80"
                     IsEnabled="{Binding IsNotLoggedIn}"/>
                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsGetDevices}" >
                        <Button Content="Logout"
                            Command="{Binding Logout}"
                            IsEnabled="{Binding IsLoggedIn}"/>

                        <Button Content="Setup"
                            Command="{Binding LoginMonitor}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding IsDeviceSelected}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="Run"
                            Command="{Binding LoginControl}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding IsLoggedIn}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding IsDeviceSelected}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </StackPanel>

                    <Label>
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Content" Value=""/>
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Setup}">
                                        <Setter Property="Content" Value="Setup"/>
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding IsLoggedIn_Control}">
                                        <Setter Property="Content" Value="Run"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <Label Content="{Binding V275_JobName}"/>
                    <Label Content="State:"/>
                    <Label Content="{Binding V275_State}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Background" Value="Red"/>
                                <Style.Triggers>
                                    <DataTrigger Value="Editing" Binding="{Binding V275_State}">
                                        <Setter Property="Background" Value="Green"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                </StackPanel>
            </Border>

            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
                    <StackPanel Orientation="Horizontal" Margin="3">
                        <Label Content="Printer"/>
                        <ComboBox ItemsSource="{Binding Printers}" SelectedItem="{Binding SelectedPrinter}" IsEnabled="{Binding IsNotJobRunning}"/>
                    </StackPanel>
                </Border>

                <Border Grid.Column="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
                    <StackPanel Orientation="Horizontal" Margin="3">
                        <Label Content="Grading Stadards"/>
                        <ComboBox ItemsSource="{Binding Standards}" SelectedItem="{Binding SelectedStandard}"  IsEnabled="{Binding IsNotJobRunning}"/>
                    </StackPanel>
                </Border>
                
                <Border Grid.Column="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" Margin="5">
                    <StackPanel Orientation="Horizontal" Margin="3">
                        
                        <Label Content="Job"/>
                        
                        <mah:NumericUpDown Value="{Binding JobLoopCount}" Minimum="1" Maximum="100" Interval="1"/>

                        <Button Content="Start"
                            Command="{Binding StartJob}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="False" Binding="{Binding IsLoggedIn_Control}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="True" Binding="{Binding IsJobRunning}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="Idle" Binding="{Binding V275_State}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="Running" Binding="{Binding V275_State}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Command="{Binding PauseJob}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Content" Value="Pause"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="False" Binding="{Binding IsLoggedIn_Control}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding IsJobRunning}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="True" Binding="{Binding IsJobPaused}">
                                            <Setter Property="Content" Value="Resume"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="Stop"
                            Command="{Binding StopJob}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="False" Binding="{Binding IsLoggedIn_Control}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding IsJobRunning}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Border>
                
            </Grid>
        </Grid>
        
        <ScrollViewer Grid.Row="1" >
            <ItemsControl ItemsSource="{Binding Labels}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:LabelControlView />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <StatusBar VerticalAlignment="Bottom" Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding UserMessage}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</mah:MetroWindow>
